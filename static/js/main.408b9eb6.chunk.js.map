{"version":3,"sources":["components/form/index.js","components/hour/index.js","components/hours/index.js","components/today/index.js","components/tomorrow/index.js","components/day/index.js","components/tenDays/index.js","components/notFound/index.js","components/weather/index.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","textField","marginTop","spacing","unit","input","height","button","marginLeft","props","classes","react_default","a","createElement","Fragment","TextField_default","id","label","type","className","margin","variant","value","city","onChange","handleChange","InputProps","Button_default","color","onClick","handleClick","hour","image","width","temp","src","icon","alt","time","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","tileData","GridList_default","cellHeight","cols","map","tile","i","GridListTile_default","gridListTile","key","components_hour","Object","objectSpread","mixins","gutters","paddingTop","paddingBottom","padding","fontSize","marginRight","current","forecast","last_updated","slice","item","temp_c","condition","minTemp","day","mintemp_c","maxTemp","maxtemp_c","conditionText","text","date","Date","getDate","Paper_default","elevation","Typography_default","getMonth","getMonthName","hours","ExpansionPanel","border","boxShadow","&:not(:last-child)","borderBottom","&:before","expanded","MuiExpansionPanel","ExpansionPanelSummary","marginBottom","minHeight","&$expanded","content","ExpansionPanelSummary_default","muiName","ExpansionPanelDetails","MuiExpansionPanelDetails","right","textAlign","todayDate","day_ExpansionPanel","day_ExpansionPanelSummary","Number","day_ExpansionPanelDetails","TenDays","length","components_day","Math","round","component","TabContainer","_ref","children","dir","style","Weather","state","event","_this","setState","handleChangeIndex","index","_this$props","this","found","AppBar_default","position","Tabs_default","indicatorColor","textColor","Tab_default","lib_default","axis","direction","onChangeIndex","components_today","notFound","tomorrow","tenDays","React","Component","maxWidth","withTheme","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","target","fetch","concat","then","response","ok","json","jsonResponse","forecastday","catch","err","_this2","Error","networkError","console","log","message","_this$state","components_form","weather","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.408b9eb6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n\r\n    textField: {\r\n        marginTop: theme.spacing.unit*4,\r\n    },\r\n\r\n    input: {\r\n        height: theme.spacing.unit*1.75,\r\n    },\r\n\r\n    button: {\r\n        marginTop: theme.spacing.unit*5,\r\n        marginLeft: theme.spacing.unit,\r\n    }\r\n});\r\nfunction SearchField(props){\r\n    const { classes } = props;\r\n    return(\r\n        <>\r\n        <TextField\r\n            id=\"outlined-search\"\r\n            label=\"City\"\r\n            type=\"search\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={props.city}\r\n            onChange={props.handleChange}\r\n            InputProps={{ classes: { input: props.classes.input } }}\r\n        />\r\n            <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={props.handleClick}>\r\n                Search\r\n            </Button>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(SearchField);","import React from 'react';\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n\r\n    hour: {\r\n        // height: theme.spacing.unit*5,\r\n    },\r\n\r\n    image: {\r\n        width: theme.spacing.unit*6,\r\n    }\r\n\r\n\r\n});\r\n\r\nfunction Hour(props){\r\n    const {classes } = props;\r\n    return(\r\n        <div className={classes.hour}>\r\n            <div>{props.temp}&#176;</div>\r\n            <img className={classes.image} src={props.icon} alt='weather icon' />\r\n            <div>{props.time}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Hour);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport Hour from \"../hour\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop:theme.spacing.unit*2\r\n\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n    },\r\n\r\n\r\n});\r\n\r\n\r\nfunction Hours(props){\r\n    const { classes, tileData } = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <GridList className={classes.gridList} cellHeight={110} cols={6}>\r\n                {tileData && tileData.map((tile, i) => (\r\n                    <GridListTile className={classes.gridListTile} key={tile.icon + i}>\r\n                        <Hour temp={tile.temp}\r\n                              icon={tile.icon}\r\n                              time={tile.time}/>\r\n\r\n                    </GridListTile>\r\n                ))}\r\n            </GridList>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Hours);\r\n\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Hours from \"../hours\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n    },\r\n\r\n    image: {\r\n        marginTop: theme.spacing.unit*2\r\n\r\n    },\r\n    temp: {\r\n        display: 'inline-block',\r\n        padding: theme.spacing.unit*2,\r\n        fontSize: theme.spacing.unit*3,\r\n        marginRight: theme.spacing.unit*1\r\n    }\r\n});\r\n\r\n\r\nfunction Today(props){\r\n\r\n    const { classes, current, forecast } = props;\r\n    const time = current.last_updated && current.last_updated.slice(-5);\r\n    const tileData = forecast[0] && forecast[0].hour.map(item => {\r\n        return {\r\n            temp: item.temp_c,\r\n            icon: item.condition.icon,\r\n            time: item.time.slice(-5)\r\n        }\r\n    })\r\n    // const src = current.condition && current.condition.icon;\r\n\r\n    const minTemp = forecast[0] && forecast[0].day.mintemp_c;\r\n    const maxTemp = forecast[0] && forecast[0].day.maxtemp_c;\r\n    const conditionText = current.condition && current.condition.text;\r\n    const date = new Date();\r\n    const day = date.getDate();\r\n    function getMonthName(){\r\n        const month = date.getMonth();\r\n        switch(month){\r\n            case 0:\r\n                return 'January';\r\n            case 1:\r\n                return 'February';\r\n            case 2:\r\n                return 'March';\r\n            case 3:\r\n                return 'April';\r\n            case 4:\r\n                return 'May';\r\n            case 5:\r\n                return 'June';\r\n            case 6:\r\n                return 'July';\r\n            case 7:\r\n                return 'August';\r\n            case 8:\r\n                return 'September';\r\n            case 9:\r\n                return 'October';\r\n            case 10:\r\n                return 'November';\r\n            case 11:\r\n                return 'December';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Paper className={classes.root} elevation={1}>\r\n\r\n                <Typography variant=\"h5\" >\r\n                    {getMonthName()} {day}, {time}\r\n                </Typography>\r\n                <pre><Typography >\r\n                    Day {maxTemp}&#176;    Night {minTemp}&#176;\r\n\r\n                </Typography></pre>\r\n                <Typography variant=\"h1\" >\r\n                    {props.current.temp_c}<sup>&#8451;</sup>\r\n                </Typography>\r\n                <div className={classes.temp}>\r\n                    {conditionText}\r\n\r\n                </div>\r\n                <Hours tileData={tileData}/>\r\n\r\n            </Paper>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Today)","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Hours from \"../hours\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n    },\r\n\r\n    image: {\r\n        width: theme.spacing.unit*14\r\n\r\n    },\r\n    temp: {\r\n        display: 'inline-block',\r\n        padding: theme.spacing.unit*2,\r\n        fontSize: theme.spacing.unit*3,\r\n        marginRight: theme.spacing.unit*1\r\n    }\r\n});\r\n\r\nfunction Tomorrow(props){\r\n    const { classes, forecast } = props;\r\n    const tileData = forecast[1] && forecast[1].hour.map(item => {\r\n        return {\r\n            temp: item.temp_c,\r\n            icon: item.condition.icon,\r\n            time: item.time.slice(-5)\r\n        }\r\n    });\r\n    const src = forecast[1] && forecast[1].day.condition.icon;\r\n\r\n    const minTemp = forecast[1] && forecast[1].day.mintemp_c;\r\n    const maxTemp = forecast[1] && forecast[1].day.maxtemp_c;\r\n    const conditionText = forecast[1] && forecast[1].day.condition.text;\r\n    const date = forecast[1] && new Date(forecast[1].date.slice(0,4), forecast[1].date.slice(5,7)-1, forecast[1].date.slice(8) )\r\n    const day = date && date.getDate();\r\n    function getMonthName(){\r\n        const month = date && date.getMonth();\r\n        switch(month){\r\n            case 0:\r\n                return 'January';\r\n            case 1:\r\n                return 'February';\r\n            case 2:\r\n                return 'March';\r\n            case 3:\r\n                return 'April';\r\n            case 4:\r\n                return 'May';\r\n            case 5:\r\n                return 'June';\r\n            case 6:\r\n                return 'July';\r\n            case 7:\r\n                return 'August';\r\n            case 8:\r\n                return 'September';\r\n            case 9:\r\n                return 'October';\r\n            case 10:\r\n                return 'November';\r\n            case 11:\r\n                return 'December';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Paper className={classes.root} elevation={1}>\r\n\r\n                <Typography variant=\"h5\" >\r\n                    {getMonthName()} {day}\r\n                </Typography>\r\n                <pre><Typography >\r\n                    Day {maxTemp}&#176;    Night {minTemp}&#176;\r\n\r\n                </Typography></pre>\r\n                <div><img src={src} className={classes.image} alt='weather_icon' /></div>\r\n                <div className={classes.temp}>\r\n                    {conditionText}\r\n\r\n                </div>\r\n                <Hours tileData={tileData}/>\r\n\r\n            </Paper>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Tomorrow)","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Hours from \"../hours\";\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        border: '1px solid rgba(0,0,0,.125)',\r\n        boxShadow: 'none',\r\n        '&:not(:last-child)': {\r\n            borderBottom: 0,\r\n        },\r\n        '&:before': {\r\n            display: 'none',\r\n        },\r\n    },\r\n    expanded: {\r\n        margin: 'auto',\r\n    },\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        backgroundColor: 'rgba(0,0,0,.03)',\r\n        borderBottom: '1px solid rgba(0,0,0,.125)',\r\n        marginBottom: -1,\r\n        minHeight: 56,\r\n        '&$expanded': {\r\n            minHeight: 56,\r\n        },\r\n    },\r\n    content: {\r\n        '&$expanded': {\r\n            margin: '12px 0',\r\n        },\r\n    },\r\n    expanded: {},\r\n})(props => <MuiExpansionPanelSummary {...props} />);\r\n\r\nExpansionPanelSummary.muiName = 'ExpansionPanelSummary';\r\nconst ExpansionPanelDetails = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst styles = theme => ({\r\n    right: {\r\n        display: 'flex',\r\n        marginLeft: 'auto'\r\n    },\r\n\r\n    day: {\r\n        textAlign: 'left'\r\n    },\r\n    condition: {\r\n        fontSize: theme.spacing.unit*2,\r\n        textAlign: 'left'\r\n    },\r\n\r\n    minTemp: {\r\n        fontSize: theme.spacing.unit*2,\r\n        textAlign: 'right'\r\n\r\n    },\r\n    maxTemp: {\r\n        textAlign: 'right'\r\n    },\r\n    temp: {\r\n        width: theme.spacing.unit*5\r\n    }\r\n\r\n});\r\n\r\n\r\nfunction Day (props) {\r\n\r\n        const { classes, date, condition, icon, maxTemp, minTemp, hour } = props;\r\n        const today = new Date();\r\n        const todayDate = today.getDate();\r\n\r\n\r\n        const day = date.slice(-2);\r\n\r\n    function getMonthName(){\r\n        const month = date.slice(5, 7) - 1;\r\n        switch(month){\r\n            case 0:\r\n                return 'January';\r\n            case 1:\r\n                return 'February';\r\n            case 2:\r\n                return 'March';\r\n            case 3:\r\n                return 'April';\r\n            case 4:\r\n                return 'May';\r\n            case 5:\r\n                return 'June';\r\n            case 6:\r\n                return 'July';\r\n            case 7:\r\n                return 'August';\r\n            case 8:\r\n                return 'September';\r\n            case 9:\r\n                return 'October';\r\n            case 10:\r\n                return 'November';\r\n            case 11:\r\n                return 'December';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    const tileData =hour.map(item => {\r\n        return {\r\n            temp: item.temp_c,\r\n            icon: item.condition.icon,\r\n            time: item.time.slice(-5)\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n            <div>\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary>\r\n                            <div>\r\n                                {Number(day)=== todayDate ? <Typography variant='h6' className={classes.day}>Today</Typography>:<Typography variant='h6' className={classes.day}>{getMonthName()} {day}</Typography>}\r\n                                <Typography variant='caption' className={classes.condition}>{condition}</Typography>\r\n                            </div>\r\n                            <div className={classes.right}>\r\n                                <img src={icon} alt='weather icon' />\r\n                                <div className={classes.temp}>\r\n                                    <Typography variant='h6' className={classes.maxTemp}>{maxTemp}&#176;</Typography>\r\n                                    <Typography variant='caption' className={classes.minTemp}>{minTemp}&#176;</Typography>\r\n                                </div>\r\n                            </div>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            <Hours tileData={tileData}/>\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default withStyles(styles)(Day);\r\n\r\n","import React from 'react';\r\nimport Day from \"../day\";\r\n\r\nfunction TenDays(props) {\r\n    const { forecast } = props;\r\n    return(\r\n        <div>\r\n            {forecast.length && forecast.map(item => (\r\n                <Day\r\n                    key={item.date}\r\n                    date = {item.date}\r\n                condition={item.day.condition.text}\r\n                icon={item.day.condition.icon}\r\n                maxTemp={Math.round(item.day.maxtemp_c)}\r\n                minTemp={Math.round(item.day.mintemp_c)}\r\n                hour={item.hour}/>\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default TenDays;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\nfunction NotFound(props) {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.root} elevation={1}>\r\n                <Typography variant=\"h5\" component=\"h3\">\r\n                    Not found\r\n                </Typography>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nNotFound.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(NotFound);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Today from \"../today\";\r\nimport Tomorrow from \"../tomorrow\";\r\nimport TenDays from \"../tenDays\";\r\nimport NotFound from \"../notFound\";\r\n\r\nfunction TabContainer({ children, dir }) {\r\n    return (\r\n        <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    dir: PropTypes.string.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        maxWidth: 700,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        marginTop: theme.spacing.unit*2\r\n    },\r\n});\r\n\r\nclass Weather extends React.Component {\r\n    state = {\r\n        value: 0,\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    handleChangeIndex = index => {\r\n        this.setState({ value: index });\r\n    };\r\n\r\n    render() {\r\n        const { classes, theme, current, forecast, found } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                        value={this.state.value}\r\n                        onChange={this.handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                    >\r\n                        <Tab label=\"Today\" />\r\n                        <Tab label=\"Tomorrow\" />\r\n                        <Tab label=\"10 days\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n                    <SwipeableViews\r\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                        index={this.state.value}\r\n                        onChangeIndex={this.handleChangeIndex}\r\n                    >\r\n                        <TabContainer dir={theme.direction}>{found?<Today current={current} forecast={forecast}/> :<NotFound/>}\r\n                        </TabContainer>\r\n                        <TabContainer dir={theme.direction}>{found?<Tomorrow current={current}\r\n                                                                      forecast={forecast}/>:<NotFound/>}</TabContainer>\r\n                        <TabContainer dir={theme.direction}>{found?<TenDays forecast={forecast}/>:<NotFound/>}</TabContainer>\r\n                    </SwipeableViews>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(styles, { withTheme: true })(Weather);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport SearchField from \"./components/form\";\nimport Weather from \"./components/weather\";\n\n\nclass App extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n          city: 'Yerevan',\n          current: {},\n          forecast: [],\n          found: true,\n      }\n  }\n\n    handleChange = e => {\n      this.setState({ city: e.target.value });\n    }\n\n    componentDidMount() {\n      fetch('https://api.apixu.com/v1/forecast.json?key=f68e0ace02014b5dabf134119190301&q=yerevan&days=10')\n          .then(response => {\n          if (response.ok) {\n              return response.json();\n          }\n          throw new Error('Requeat failed!');\n      }, networkError => console.log(networkError.message)\n      )\n          .then(jsonResponse =>{\n\n              this.setState({forecast: jsonResponse.forecast.forecastday,\n                  current: jsonResponse.current,\n\n              })\n      })\n    }\n\n    handleClick=()=>{\n      const { city } = this.state;\n        fetch(`https://api.apixu.com/v1/forecast.json?key=f68e0ace02014b5dabf134119190301&q=${city}&days=10`)\n            .then(response => {\n                    if (response.ok) {\n                        return response.json();\n                    }\n\n                }\n            )\n            .then(jsonResponse =>{\n\n                this.setState({forecast: jsonResponse.forecast.forecastday,\n                    current: jsonResponse.current,\n                    found: true,\n\n                })\n            }).catch(err =>{\n                // console.error(err.message);\n                this.setState({found: false})\n        })\n    }\n\n\n    render() {\n    const { city, current, forecast, found } = this.state;\n\n    return (\n      <div className=\"App\">\n        <SearchField city={city} handleChange={this.handleChange} handleClick={this.handleClick}  />\n        <Weather current={current} forecast={forecast} found={found}/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}